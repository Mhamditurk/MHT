package Cözümler;

public class nonlineerFiniteDifference {

	public static void main(String[] args) {
		double a,b,alfa,beta;
	    double h,x;
	    double w[]= new double [101];
	    int n,i;
	    a=0;
		b=Math.PI;
		n=19;
		alfa=2;
		beta=2;
	    h=(b-a)/(n+1);
	    NonlinearFiniteDifference(w,a,b,alfa,beta,h,n);
	    System.out.printf("xi\t\twi\t\tYi\t\t|wi-yi|");
	    System.out.printf("\n__________________________________________________________________________________\n"); 
	    for(i=1;i<=n;i++) {
          	x=a+i*h;
          	System.out.printf("\n%.2f",x);
          	System.out.printf("\t\t%.6f",w[i]);
  	      	System.out.printf("\t%.6f",Y(x));
  	      	System.out.printf("\t%E",Math.abs(w[i]-Y(x)));
          	System.out.printf("\n__________________________________________________________________________________\n");
       }
	}
	static double Fxyyt(double x,double y,double yt)
	{
		return 1./2*(1-Math.pow(yt,2)-y*Math.sin(x));	
	}
	static double Fy(double x,double y,double yt)
	{
		return -Math.sin(x)/2;	
	}
	static double Fyt(double x,double y,double yt)
	{
		return -yt;	
	}
	static double Y(double x)
	{
		return 2+Math.sin(x);	
	}
	static double Modul(double v[],int n)
	{
		double e=Math.abs(v[1]);
		int i;
		for(i=2;i<=n;i++)
		     if(Math.abs(v[i])>e) e=Math.abs(v[i]);
		return e;
	}
	static void NonlinearFiniteDifference(double w[],double a,double b, double alfa, double beta, double h, int n)
	{
	     double x,t;
	     double A[]= new double [101];
	     double B[]= new double [101];
	     double C[]= new double [101];
	     double D[]= new double [101];
	     double U[]= new double [101];
	     double Z[]= new double [101];
	     double L[]= new double [101];
	     double v[]= new double [101];
	     int i,k;
	     w[0]=alfa;
	     w[n+1]=beta;
	     for(i=1;i<=n;i++)w[i]=alfa+i*((beta-alfa)/(b-a))*h;
	     k=1;
	     while(k<=100)
	     {
	     	x=a+h;
	     	t=(w[2]-alfa)/(2*h);
	     	A[1]=2+Math.pow(h,2)*Fy(x,w[1],t);
	     	B[1]=-1+h/2*Fyt(x,w[1],t);
	     	D[1]=-(2*w[1]-w[2]-alfa+Math.pow(h,2)*Fxyyt(x,w[1],t));
	     	for(i=2;i<n;i++)
	     	{
	     		x=a+i*h;
	     		t=(w[i+1]-w[i-1])/(2*h);
	     		A[i]=2+Math.pow(h,2)*Fy(x,w[i],t);
				B[i]=-1+h/2*Fyt(x,w[i],t);   
				C[i]=-1-h/2*Fyt(x,w[i],t);  		
				D[i]=-(2*w[i]-w[i+1]-w[i-1]+Math.pow(h,2)*Fxyyt(x,w[i],t));
	     	}
	     	x=b-h;
	     	t=(beta-w[n-1])/(2*h);
	        A[n]=2+Math.pow(h,2)*Fy(x,w[n],t);
	        C[n]=-1-h/2*Fyt(x,w[n],t);
	     	D[n]=-(2*w[n]-w[n-1]-beta+Math.pow(h,2)*Fxyyt(x,w[n],t));
	     	
	     	L[1]=A[1];
			U[1]=B[1]/A[1];
			Z[1]=D[1]/L[1];
			for(i=2;i<n;i++)
			{
			 	L[i]=A[i]-C[i]*U[i-1];
			  	U[i]=B[i]/L[i];
			 	Z[i]=(D[i]-C[i]*Z[i-1])/L[i];
			}
			L[n]=A[n]-C[n]*U[n-1];
			Z[n]=(D[n]-C[n]*Z[n-1])/L[n];
			v[n]=Z[n];
			w[n]+=v[n];
			for(i=n-1;i>0;i--)
			{
				v[i]=Z[i]-U[i]*v[i+1];
				w[i]+=v[i];
			}
			if(Modul(v,n)<=Math.floor(1e-8)) return;
		    k++;	
		}
	}
}
